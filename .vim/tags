!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AClass::AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::AClass::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass::AClass	file:	signature:(Fred<T> f)
AClass::AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::AClass::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::AClass	file:	signature:(Fred<T> f)
AClass::AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::AClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::AClass	file:	signature:(Fred<T> f)
AClass::AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::AClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::AClass	file:	signature:(Fred<T> f)
AClass::badClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::badClass::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass::badClass	file:	signature:(Fred<T> f)
AClass::badClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::badClass::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::badClass	file:	signature:(Fred<T> f)
AClass::badClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::badClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::badClass	file:	signature:(Fred<T> f)
AClass::badClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::badClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::badClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing<T::C>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing<T<t>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing<T<t>>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing<T>(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing<T>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing<T::C>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing<T<t>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing<T<t>>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing<T>(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing<T>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T::C>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T<t>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T<t>>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T>(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T::C>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T<t>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T<t>>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T>(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
AClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
BaseCalss	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^class BaseCalss:$/;"	kind:class	file:	inherits:AClass
BaseCalss	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^class BaseCalss:$/;"	kind:class	file:	inherits:AClass,AClass
Class	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^    Class(T val, typename std::enable_if<std::is_floating_point<T>::value, T>::type* = 0)$/;"	kind:function	class:Class	access:public	signature:(T val, typename std::enable_if<std::is_floating_point<T>::value, T>::type* = 0)
Class	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^    Class(int val): value(val) {$/;"	kind:function	class:Class	file:	access:private	signature:(int val)
Class	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^class Class {$/;"	kind:class	file:
Class::Class	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^    Class(T val, typename std::enable_if<std::is_floating_point<T>::value, T>::type* = 0)$/;"	kind:function	class:Class	access:public	signature:(T val, typename std::enable_if<std::is_floating_point<T>::value, T>::type* = 0)
Class::Class	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^    Class(int val): value(val) {$/;"	kind:function	class:Class	file:	access:private	signature:(int val)
Class::Function	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^    Function(double variable);$/;"	kind:prototype	class:Class	file:	access:private	signature:(double variable)
Class::Function	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^void Class::Function(double variable) {$/;"	kind:function	class:Class	signature:(double variable)
Function	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^    Function(double variable);$/;"	kind:prototype	class:Class	file:	access:private	signature:(double variable)
Function	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^void Class::Function(double variable) {$/;"	kind:function	class:Class	signature:(double variable)
a	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^    return b > a;$/;"	kind:variable
aClass	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^Aclass<T> aClass = bClass->getThing();$/;"	kind:variable	typeref:class:BaseCalss
b	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^uint32_t b = static_cast<uint8_t>(a);$/;"	kind:variable
badClass::badClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^badClass::badClass::getThing(Fred<T> f);$/;"	kind:prototype	class:badClass::badClass	file:	signature:(Fred<T> f)
badClass::badClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^badClass::badClass::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:badClass::badClass	file:	signature:(Fred<T> f)
badClass::badClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^badClass::badClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:badClass::badClass	file:	signature:(Fred<T> f)
badClass::badClass::getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^badClass<T>::badClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:badClass::badClass	file:	signature:(Fred<T> f)
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>(Fred f);$/;"	kind:variable
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>(Fred<T> f);$/;"	kind:variable
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>(Fred<T>::List f);$/;"	kind:variable
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^getThing<T>(Fred f);$/;"	kind:variable
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^getThing<T>(Fred<T> f);$/;"	kind:variable
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^getThing<T>(Fred<T>::List f);$/;"	kind:variable
func	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^void func<std::map<std::string, std::string<double>>>() {$/;"	kind:function	signature:()
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::AClass::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass::AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::AClass::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::AClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing<T::C>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing<T<t>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing<T<t>>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing<T>(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass::getThing<T>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing<T::C>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing<T<t>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing<T<t>>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing<T>(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b AClass<T>::getThing<T>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b getThing(Fred f);$/;"	kind:prototype	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b getThing(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b getThing<T::C>(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b getThing<T<t>::List>(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b getThing<T<t>>(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b getThing<T>(Fred f);$/;"	kind:prototype	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::b getThing<T>(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::badClass::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass::badClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::badClass::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::badClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass::badClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::badClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::AClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T::C>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T<t>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T<t>>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T>(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass::getThing<T>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T::C>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T<t>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T<t>>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T>(Fred f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b AClass<T>::getThing<T>(Fred<T> f);$/;"	kind:prototype	class:AClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b getThing(Fred f);$/;"	kind:prototype	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b getThing(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b getThing<T::C>(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b getThing<T<t>::List>(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b getThing<T<t>>(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b getThing<T>(Fred f);$/;"	kind:prototype	file:	signature:(Fred f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::b getThing<T>(Fred<T> f);$/;"	kind:prototype	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>::badClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:AClass::badClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^badClass::badClass::getThing(Fred<T> f);$/;"	kind:prototype	class:badClass::badClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^badClass::badClass::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:badClass::badClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^badClass::badClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:badClass::badClass	file:	signature:(Fred<T> f)
getThing	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^badClass<T>::badClass<T>::getThing<T<B<T>::List>::List>(Fred<T> f);$/;"	kind:prototype	class:badClass::badClass	file:	signature:(Fred<T> f)
j	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^char j = reinterpret_cast<char>(k);$/;"	kind:variable
main	plugged/clang_complete/examples/boost.cpp	/^int main()$/;"	kind:function	signature:()
operator <	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^bool operator<(const ConnectionString& other) const {$/;"	kind:function	signature:(const ConnectionString& other) const
